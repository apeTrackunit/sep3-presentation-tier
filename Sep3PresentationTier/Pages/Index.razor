@page "/"
@using System.Security.Claims
@using Services.Implementations

@inject Blazored.LocalStorage.ILocalStorageService localStorage

@if (@hasToken)
{
    <div>Hi @name! (@role)</div>
    <div>Logged in!</div>
} else
{
    <Login />
}
    

@code
{
    bool hasToken;
    string name;
    string role;
    IEnumerable<Claim> claims;

    protected override async Task OnInitializedAsync()
    {
        await IsLoggedIn();
    }
    
    private async Task IsLoggedIn()
    {
        string token = await localStorage.GetItemAsync<string>("JWT");
        if (token == null)
            return;
        claims = AuthService.CreateClaimsPrincipal(token).Claims;
        name = claims.First(claim => claim.Type.Equals("sub")).Value;
        role = claims.First(claim => claim.Type.Equals("role")).Value;

        hasToken = token != null;
    }

}
