@page "/ViewReports"
@using Services.Interfaces
@using Services.Implementations
@using Model
@inject IReportService ReportService

<h3 style="text-align: center">Overview of all reports</h3>

<MudGrid>
    
    @foreach (var report in reports)
    {
        <MudItem xs="6">
            <MudCardMedia Image="css/imgs/killme.jpg" ></MudCardMedia>
            <MudCard Class="d-flex align-items-bottom justify-center mud-width-full py-8">
                <MudCardContent>
                    <MudText Typo="Typo.body1"> Latitude: @report.Location.Latitude</MudText>
                    <MudText Typo="Typo.body1">Longtitude: @report.Location.Longitude</MudText>
                    <MudText Typo="Typo.body1">Size: @report.Location.Size </MudText>
                    <MudText Typo="Typo.body1"> Description: @report.Description</MudText>
                    <br>
                    <MudText Typo="Typo.body2"> Date: @report.Date[1]/@report.Date[2]/@report.Date[0]</MudText>
                    <MudText Typo="Typo.body2"> Time: @report.Time[0]:@report.Time[1]</MudText>
                    <MudText Typo="Typo.body2"> Status @report.Status</MudText>
                    <br>
                    <MudButton Variant="Variant.Filled" EndIcon="@Icons.Material.Filled.Send" Color="Color.Success"> Create Event</MudButton>

                </MudCardContent>
                </MudCard>
        </MudItem>
    }

    <div>@msg</div>

</MudGrid>


@code {

    private string msg = "";
    private ICollection<Report> reports = new List<Report>();

  
    
    protected override async Task OnInitializedAsync()
    {
        await loadData();
    }

    private async Task loadData()
    {
        try
        {
            reports = await ReportService.GetAsync();
        }
        catch (Exception ex)
        {
            msg = ex.Message;
        }
    }

}